package com.server_application.ssd.Service;

import com.server_application.ssd.Controller.UserController;
import com.server_application.ssd.DTO.CartDTO;
import com.server_application.ssd.Models.Cart;
import com.server_application.ssd.Models.Item;
import com.server_application.ssd.Repository.CartRepository;
import com.server_application.ssd.Repository.ItemRepository;
//import jakarta.transaction.Transactional;
import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.jdbc.core.JdbcTemplate;
import org.springframework.jdbc.core.RowMapper;
import org.springframework.stereotype.Service;

import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
//@Transactional
@Service
public class CartService implements CartServiceInterface{
    private final JdbcTemplate jdbcTemplate;
    @Autowired
    CartRepository cartRepository;
    @Autowired
    ItemRepository itemRepository;
    private static final Logger LOGGER = LogManager.getLogger(CartService.class);

    public CartService(JdbcTemplate jdbcTemplate) {
        this.jdbcTemplate = jdbcTemplate;
    }
    public List<Item> getCartByIds(int userId) {
        List<Item> jsonObjects = new ArrayList<>();
        List<Cart> carts = cartRepository.findByUserId(userId);
        for (int i = 0; i < carts.size(); i++) {
            Item item = itemRepository.findById(carts.get(i).getItemId());
            if (item != null) {
                List<String> imageUrls = cartRepository.findImageUrlsByItemId(item.getId());
                item.setImageUrls(imageUrls);
            }
            jsonObjects.add(item);
        }
        LOGGER.info("Successfully fetched Card Details by id in Service");
        return jsonObjects;
    }

    public void createNewCart(CartDTO cart) {

        Cart cartNew = new Cart();
        cartNew.setItemId(cart.getItemId());
        cartNew.setUserId(cart.getUserId());
        cartNew.setQuantity(cart.getQuantity());
        cartRepository.save(cartNew);
        LOGGER.info("Successfully created the new Cart in Service");
    }

}
