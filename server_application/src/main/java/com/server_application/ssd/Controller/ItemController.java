package com.server_application.ssd.Controller;

import com.server_application.ssd.DTO.ItemDTO;
import com.server_application.ssd.Models.Card;
import com.server_application.ssd.Models.Cart;
import com.server_application.ssd.Models.Item;
import com.server_application.ssd.Service.ItemService;
import com.server_application.ssd.Service.ItemServiceInterface;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;

import java.util.List;
import java.util.Map;

@RestController
@RequestMapping("/api/v1/item")
public class ItemController {

    @Autowired
    public ItemServiceInterface itemServiceInterface;

    @PostMapping("/insertItem")
    public ResponseEntity<?> insertItem(@RequestBody ItemDTO item) {

        try {
            itemServiceInterface.createNewItem(item);
            return ResponseEntity.ok("Successfully insert");
        } catch (Exception e) {
            return ResponseEntity.badRequest().body("Failed to insert Items");
        }
    }

    @GetMapping("/getAllItems")
    public ResponseEntity<?> getAllItems() {

        try {
            List<Item> itemList = itemServiceInterface.getAllItems();
            return ResponseEntity.ok(itemList);
        } catch (Exception e) {
            return ResponseEntity.badRequest().body("Failed to get All Items");
        }
    }

    @GetMapping("/getItem/{itemId}")
    public ResponseEntity<?> getItemById(@PathVariable int itemId) {

        try {
            Item item = itemServiceInterface.getItemById(itemId);
            return ResponseEntity.ok(item);
        } catch (Exception e) {
            return ResponseEntity.badRequest().body("Failed to get Items");
        }
    }

    @PutMapping("/updateItem")
    public ResponseEntity<?> updateItem(@RequestBody Item item) {

        try {
            itemServiceInterface.updateItem(item);
            return ResponseEntity.ok("Updated Successfully");
        } catch (Exception e) {
            return ResponseEntity.badRequest().body("Failed to update Items");
        }
    }

    @GetMapping("/deleteItem/{itemId}")
    public ResponseEntity<String> deleteItem(@PathVariable int itemId) {
        try {
            itemServiceInterface.deleteItem(itemId);
            return ResponseEntity.ok("Deleted Successfully");
        } catch (Exception e) {
            return ResponseEntity.badRequest().body("Failed to Delete Item");
        }
    }
}
