package com.server_application.ssd.Controller;

import com.server_application.ssd.DTO.OrderDTO;
import com.server_application.ssd.Models.Order;
import com.server_application.ssd.Service.ItemServiceInterface;
import com.server_application.ssd.Service.OrderService;
import com.server_application.ssd.Service.OrderServiceInterface;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;

import java.util.List;

@RestController
@RequestMapping("/api/v1/order")
public class OrdersController {

    @Autowired
    public OrderServiceInterface orderServiceInterface;

    @PostMapping("/createOrder")
    public ResponseEntity<?> createNewOrder(@RequestBody Order order){

        try {
            orderServiceInterface.createNewOrder(order);
            return ResponseEntity.ok("Successfully Created");
        } catch (Exception e) {
            return ResponseEntity.badRequest().body("Failed to Create new order");
        }
    }

    @GetMapping("/getAllOrders")
    public ResponseEntity<?> getAllOrders(){

        try {
            orderServiceInterface.getAllOrders();
            return ResponseEntity.ok("Successfully get All Orders");
        } catch (Exception e) {
            return ResponseEntity.badRequest().body("Failed to get All Orders");
        }
    }

    @GetMapping("/getOrder/{orderId}")
    public ResponseEntity<?> getOrderById(@PathVariable int orderId){

        try {
            OrderDTO order = orderServiceInterface.getOrderById(orderId);
            return ResponseEntity.ok(order);
        } catch (Exception e) {
            return ResponseEntity.badRequest().body("Failed to get Orders By id");
        }
    }

    @PostMapping("/completeOrder/{orderId}")
    public ResponseEntity<?> completeOrder(@PathVariable int orderId){


        try {
            orderServiceInterface.completeOrder(orderId);
            return ResponseEntity.ok("Successfully Completed");
        } catch (Exception e) {
            return ResponseEntity.badRequest().body("Failed to Complete Order");
        }
    }

    @DeleteMapping("/deleteOrder/{orderId}")
    public ResponseEntity<?> deleteOrder(@PathVariable int orderId){

        try {
            orderServiceInterface.deleteOrder(orderId);
            return ResponseEntity.ok("Successfully Deleted");
        } catch (Exception e) {
            return ResponseEntity.badRequest().body("Failed to Delete Order");
        }
    }
}
